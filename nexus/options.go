package nexus

import (
	"time"
)

// StartOperationOptions is input for [Client.StartOperation] and [Handler.StartOperation].
type StartOperationOptions struct {
	// Header to attach to the HTTP request. Optional.
	// Client will override any provided headers with headers set by a [Serializer].
	Header Header
	// Callback URL to provide to the handle for receiving async operation completions. Optional.
	// Implement a [CompletionHandler] and expose it as an HTTP handler to handle async completions.
	CallbackURL string
	// Request ID that may be used by the server handler to dedupe this start request.
	// By default a v4 UUID will be generated by the client.
	RequestID string
}

// GetOperationResultOptions are Options for [OperationHandle.GetResult] and [Handler.GetOperationResult].
type GetOperationResultOptions struct {
	// Header to attach to the HTTP request. Optional.
	Header Header
	// TODO: merge client / server docs
	// Client:
	// Duration to wait for operation completion. Zero or negative value implies no wait.
	// Server:
	// If non-zero, reflects the duration the caller has indicated that it wants to wait for operation completion,
	// turning the request into a long poll.
	Wait time.Duration
}

// GetOperationInfoOptions are options for [OperationHandle.GetInfo] and [Handler.GetOperationInfo].
type GetOperationInfoOptions struct {
	// Header to attach to the HTTP request. Optional.
	Header Header
}

// CancelOperationOptions are options for [OperationHandle.Cancel] and [Handler.CancelOperation].
type CancelOperationOptions struct {
	// Header to attach to the HTTP request. Optional.
	Header Header
}
